name: Release

on:
  workflow_call:
    inputs:
      java:
        required: false
        type: string
        default: 11
    secrets:
      GH_PUSH_TOKEN:
        required: true
      MAVEN_GPG_PASSPHRASE:
        required: true
      GPG_PUBLIC_KEY:
        required: true
      GPG_PRIVATE_KEY:
        required: true
      SONATYPE_USERNAME:
        required: true
      SONATYPE_TOKEN:
        required: true

      BLUESKY_USERNAME:
        required: false
      BLUESKY_PASSWORD:
        required: false
      MASTODON_ACCESS_KEY:
        required: false

jobs:
  Release:
    name: Publish Version
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java }}
          distribution: 'temurin'
          cache: maven
          server-id: central
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Find maven
        id: maven
        shell: bash
        run: echo "maven=$( test -f mvnw  && echo "./mvnw" || echo mvn )" >> $GITHUB_OUTPUT

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=$(${{ steps.maven.outputs.maven }} help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT

      - name: Root Artifact
        id: root
        shell: bash
        run: |
          artifact_id=$(${{ steps.maven.outputs.maven }} help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "artifact_id=$(echo $artifact_id)" >> $GITHUB_OUTPUT

      - name: Check for snapshot
        id: release
        shell: bash
        run: |
          echo "SNAPSHOT_RELEASE=${{ endsWith( steps.vars.outputs.VERSION, '-SNAPSHOT' ) }} " >> $GITHUB_OUTPUT

      - name: Publish
        run: |
          ${{ steps.maven.outputs.maven }} -e -Djreleaser -Dsnapshot.build=${{ steps.release.outputs.SNAPSHOT_RELEASE }} clean deploy 
          ${{ steps.maven.outputs.maven }} -e -Djreleaser -Dsnapshot.build=${{ steps.release.outputs.SNAPSHOT_RELEASE }} -N jreleaser:full-release
        env:
          BLUESKY_PASSWORD: ${{secrets.BLUESKY_PASSWORD }}
          BLUESKY_USERNAME: ${{secrets.BLUESKY_USERNAME }}
          JRELEASER_GITHUB_TOKEN: ${{secrets.GH_PUSH_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{secrets.MAVEN_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{secrets.GPG_PRIVATE_KEY }}
          JRELEASER_NEXUS2_USERNAME: ${{secrets.SONATYPE_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{secrets.SONATYPE_TOKEN }}
          MASTODON_ACCESS_KEY: ${{secrets.MASTODON_ACCESS_KEY }}

      - name: collect logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "jreleaser.log"
          path: '**/target/jreleaser/*'
