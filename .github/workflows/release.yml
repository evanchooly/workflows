name: Release

on:
  workflow_call:
    inputs:
      java:
        required: false
        type: string
        default: 11
    secrets:
      GH_PUSH_TOKEN:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true
      SONATYPE_USERNAME:
        required: true
      SONATYPE_PASSWORD:
        required: true

      BLUESKY_USERNAME:
        required: false
      BLUESKY_PASSWORD:
        required: false
      MASTODON_ACCESS_KEY:
        required: false
      JRELEASER_GPG_PUBLIC_KEY:
        required: false

jobs:
  Release:
    name: Publish Version
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache maven artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            **/target
          key: maven-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('.github/**') }}
          restore-keys: maven-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java }}
          distribution: 'temurin'
          server-id: central
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Find maven
        id: maven
        shell: bash
        run: echo "maven=$( test -f mvnw  && echo "./mvnw" || echo mvn )" >> $GITHUB_OUTPUT

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=$(${{ steps.maven.outputs.maven }} help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT

      - name: Check for snapshot
        id: release
        shell: bash
        run: |
          echo "SNAPSHOT_RELEASE=${{ endsWith( steps.vars.outputs.VERSION, '-SNAPSHOT' ) }} " >> $GITHUB_OUTPUT

      - name: Publish
        run: |
          export GPG_TTY=$(tty)
          ${{ steps.maven.outputs.maven }} --no-transfer-progress -B --file pom.xml -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Drepository.url=https://${{ github.actor }}:${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}.git -Dmaven.site.skip=true -Drelease=true -DskipTests clean deploy
        env:
          SONATYPE_USERNAME : ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD : ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE    : ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GITHUB_OAUTH      : ${{ secrets.GH_PUSH_TOKEN }}

#      - name: collect logs
#        uses: actions/upload-artifact@v3
#        with:
#          name: "jreleaser.log"
#          path: '**/target/jreleaser/*'
